<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>hu.hw.cloud</groupId>
	<artifactId>hw-gae</artifactId>
	<version>1.0-SNAPSHOT</version>
	<packaging>pom</packaging>

	<properties>
		<maven.compiler.target>1.8</maven.compiler.target>
		<maven.compiler.source>1.8</maven.compiler.source>

		<appengine.app.id>hw-cloud1</appengine.app.id>
		<appengine.app.version>4</appengine.app.version>

		<!-- ********************** -->
		<!-- Client side properties -->
		<!-- ********************** -->
		<gwt.version>2.8.2</gwt.version>
		<!-- <gwt.version>2.8.0-SNAPSHOT</gwt.version> -->
		<gwt.style>PRETTY</gwt.style>
		<gwtp.version>1.6</gwtp.version>
		<!-- <gwtp.version>2.0-SNAPSHOT</gwtp.version> -->
		<gin.version>2.1.2</gin.version>
		<gwt-material.version>2.1-SNAPSHOT</gwt-material.version>
		<!-- <gwt-material-table.version>2.0-SNAPSHOT</gwt-material-table.version> -->
		<gwt-charts.version>0.9.9</gwt-charts.version>
		<objectify-gwt.version>1.2.1</objectify-gwt.version>

		<!-- ********************** -->
		<!-- Server side properties -->
		<!-- ********************** -->
		<spring.framework.version>3.2.18.RELEASE</spring.framework.version>
		<spring.security.version>3.2.10.RELEASE</spring.security.version>
		<slf4j.version>1.7.0</slf4j.version>
		<log4j.version>1.2.17</log4j.version>
		<fasterxml.jackson.core.version>2.4.3</fasterxml.jackson.core.version>
		<appengine.version>1.9.59</appengine.version>
		<servlet.version>2.5</servlet.version>
		<objectify.version>5.1.21</objectify.version>
		<commons-collections4.version>4.1</commons-collections4.version>
		<gae-studio.version>1.0</gae-studio.version>
		<validation-api.version>1.1.0.Final</validation-api.version>
		<web-push.version>3.0.1</web-push.version>

		<!-- ***************** -->
		<!-- Common properties -->
		<!-- ***************** -->
		<guava.version>20.0</guava.version>

		<!-- ************* -->
		<!-- Test versions -->
		<!-- ************* -->
		<junit.test.version>4.11</junit.test.version>
		<!-- <mockito.version>1.10.19</mockito.version> -->
		<mockito.version>2.0.62-beta</mockito.version>
		<selenium.version>2.53.0</selenium.version>
		<selenium.htmlunit.version>2.21</selenium.htmlunit.version>

		<!-- *************** -->
		<!-- Plugin versions -->
		<!-- *************** -->
		<gwt-maven-plugin.version>2.8.1</gwt-maven-plugin.version>
		<ltgt-gwt-maven-plugin.version>1.0-rc-9</ltgt-gwt-maven-plugin.version>
		<frontend-maven-plugin.version>1.6</frontend-maven-plugin.version>
		<maven-compiler-plugin.version>3.5.1</maven-compiler-plugin.version>
		<maven-war-plugin.version>2.6</maven-war-plugin.version>
		<maven-resources-plugin.version>3.0.1</maven-resources-plugin.version>
		<maven.surefire.version>2.19.1</maven.surefire.version>
		<maven.failsafe.version>2.19.1</maven.failsafe.version>


		<!-- ********************** -->
		<!-- Project build settings -->
		<!-- ********************** -->
		<java.version>1.8</java.version>
		<server-artifactId>hw-gae-server</server-artifactId>
		<server-directory>${project.parent.basedir}/${server-artifactId}</server-directory>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<mavenVersion>3.5</mavenVersion>
	</properties>

	<prerequisites>
		<maven>${mavenVersion}</maven>
	</prerequisites>

	<dependencyManagement>
		<dependencies>

			<dependency>
				<groupId>${project.groupId}</groupId>
				<artifactId>hw-gae-shared</artifactId>
				<version>${project.version}</version>
				<scope>compile</scope>
			</dependency>

			<dependency>
				<groupId>${project.groupId}</groupId>
				<artifactId>hw-gae-shared</artifactId>
				<version>${project.version}</version>
				<classifier>sources</classifier>
			</dependency>

			<dependency>
				<groupId>${project.groupId}</groupId>
				<artifactId>hw-gae-client_app</artifactId>
				<version>${project.version}</version>
				<scope>compile</scope>
			</dependency>

			<dependency>
				<groupId>${project.groupId}</groupId>
				<artifactId>hw-gae-client_app</artifactId>
				<version>${project.version}</version>
				<classifier>sources</classifier>
			</dependency>

			<!-- ***************************************************** -->
			<!-- **************** CLIENT DEPENDENCIES **************** -->
			<!-- ***************************************************** -->
			<!-- <dependency> <groupId>com.google.gwt</groupId> <artifactId>gwt</artifactId> 
				<version>2.8.0</version> <type>pom</type> <scope>import</scope> </dependency> -->
			<dependency>
				<groupId>com.google.gwt</groupId>
				<artifactId>gwt-servlet</artifactId>
				<version>${gwt.version}</version>
			</dependency>
			<dependency>
				<groupId>com.google.gwt</groupId>
				<artifactId>gwt-user</artifactId>
				<version>${gwt.version}</version>
				<scope>provided</scope>
			</dependency>
			<dependency>
				<groupId>com.google.gwt</groupId>
				<artifactId>gwt-codeserver</artifactId>
				<version>${gwt.version}</version>
				<scope>provided</scope>
			</dependency>
			<dependency>
				<groupId>com.google.gwt</groupId>
				<artifactId>gwt-dev</artifactId>
				<version>${gwt.version}</version>
				<scope>provided</scope>
			</dependency>

			<!-- ************ -->
			<!-- GWT-Platform -->
			<!-- ************ -->
			<dependency>
				<groupId>com.gwtplatform</groupId>
				<artifactId>gwtp-mvp-client</artifactId>
				<version>${gwtp.version}</version>
				<scope>compile</scope>
			</dependency>
			<dependency>
				<groupId>com.gwtplatform</groupId>
				<artifactId>gwtp-dispatch-rest</artifactId>
				<version>${gwtp.version}</version>
				<scope>provided</scope>
			</dependency>
			<dependency>
				<groupId>com.gwtplatform.extensions</groupId>
				<artifactId>dispatch-rest-delegates</artifactId>
				<version>${gwtp.version}</version>
				<scope>provided</scope>
			</dependency>
			<dependency>
				<groupId>com.gwtplatform</groupId>
				<artifactId>gwtp-dispatch-rest-shared</artifactId>
				<version>${gwtp.version}</version>
				<scope>compile</scope>
			</dependency>

			<!-- *********** -->
			<!-- GwtMaterial -->
			<!-- *********** -->
			<dependency>
				<groupId>com.github.gwtmaterialdesign</groupId>
				<artifactId>gwt-material</artifactId>
				<version>${gwt-material.version}</version>
			</dependency>
			<dependency>
				<groupId>com.github.gwtmaterialdesign</groupId>
				<artifactId>gwt-material-themes</artifactId>
				<version>${gwt-material.version}</version>
			</dependency>
			<dependency>
				<groupId>com.github.gwtmaterialdesign</groupId>
				<artifactId>gwt-material-addins</artifactId>
				<version>${gwt-material.version}</version>
			</dependency>
			<dependency>
				<groupId>com.github.gwtmaterialdesign</groupId>
				<artifactId>gwt-material-table</artifactId>
				<version>${gwt-material.version}</version>
			</dependency>

			<!-- ***************** -->
			<!-- GWT-UI Gwt Charts -->
			<!-- ***************** -->
			<dependency>
				<groupId>com.googlecode.gwt-charts</groupId>
				<artifactId>gwt-charts</artifactId>
				<version>${gwt-charts.version}</version>
			</dependency>

			<!-- ************************ -->
			<!-- Moxieapps Gwt Highcharts -->
			<!-- ************************ -->
			<dependency>
				<groupId>org.moxieapps.gwt</groupId>
				<artifactId>org.moxieapps.gwt.highcharts</artifactId>
				<version>1.7.0</version>
			</dependency>

			<!-- ***************** -->
			<!-- gwt-commons-codec -->
			<!-- ***************** -->
			<dependency>
				<groupId>de.knightsoft-net</groupId>
				<artifactId>gwt-commons-codec</artifactId>
				<version>1.10-2</version>
			</dependency>

			<!-- ***************** -->
			<!-- Guava -->
			<!-- ***************** -->
			<dependency>
				<groupId>com.google.guava</groupId>
				<artifactId>guava</artifactId>
				<version>${guava.version}</version>
			</dependency>

			<dependency>
				<groupId>com.google.guava</groupId>
				<artifactId>guava-gwt</artifactId>
				<version>${guava.version}</version>
			</dependency>


			<!-- ***************************************************** -->
			<!-- **************** SERVER DEPENDENCIES **************** -->
			<!-- ***************************************************** -->

			<!-- **************** -->
			<!-- SPRING FRAMEWORK -->
			<!-- **************** -->
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-core</artifactId>
				<version>${spring.framework.version}</version>
			</dependency>

			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-web</artifactId>
				<version>${spring.framework.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-webmvc</artifactId>
				<version>${spring.framework.version}</version>
			</dependency>

			<!-- *************** -->
			<!-- SPRING SECURITY -->
			<!-- *************** -->
			<dependency>
				<!-- The Core Spring Security support – spring-security-core – contains 
					authentication and access control functionality, and has support for standalone 
					(non-web) applications, method level security and JDBC. -->
				<groupId>org.springframework.security</groupId>
				<artifactId>spring-security-core</artifactId>
				<version>${spring.security.version}</version>
			</dependency>
			<dependency>
				<!-- Web support for Spring Security, the spring-security-web contains 
					filters and related web security infrastructure enabling URL access control 
					in a Servlet environment. -->
				<groupId>org.springframework.security</groupId>
				<artifactId>spring-security-web</artifactId>
				<version>${spring.security.version}</version>
			</dependency>
			<dependency>
				<!-- spring-security-config use the rich Spring Security XML namespace, 
					the spring-security-config dependency will be required. -->
				<groupId>org.springframework.security</groupId>
				<artifactId>spring-security-config</artifactId>
				<version>${spring.security.version}</version>
				<scope>runtime</scope>
			</dependency>
			<dependency>
				<groupId>org.springframework.security</groupId>
				<artifactId>spring-security-taglibs</artifactId>
				<version>${spring.security.version}</version>
			</dependency>
			<!-- https://mvnrepository.com/artifact/javax.annotation/javax.annotation-api -->
			<dependency>
				<groupId>javax.annotation</groupId>
				<artifactId>javax.annotation-api</artifactId>
				<version>1.2</version>
			</dependency>

			<!-- https://mvnrepository.com/artifact/joda-time/joda-time -->
			<dependency>
				<groupId>joda-time</groupId>
				<artifactId>joda-time</artifactId>
				<version>2.9.7</version>
			</dependency>


			<!-- Web Push -->
			<dependency>
				<groupId>nl.martijndwars</groupId>
				<artifactId>web-push</artifactId>
				<version>${web-push.version}</version>
			</dependency>


			<!-- ******* -->
			<!-- LOGGING -->
			<!-- ******* -->
			<!-- <dependency> <groupId>org.slf4j</groupId> <artifactId>slf4j-api</artifactId> 
				<version>${slf4j.version}</version> </dependency> <dependency> <groupId>org.slf4j</groupId> 
				<artifactId>slf4j-log4j12</artifactId> <version>${slf4j.version}</version> 
				</dependency> -->
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>jcl-over-slf4j</artifactId>
				<version>${slf4j.version}</version>
			</dependency>
			<dependency>
				<groupId>ch.qos.logback</groupId>
				<artifactId>logback-classic</artifactId>
				<version>1.0.9</version>
			</dependency>

			<dependency>
				<groupId>javax.validation</groupId>
				<artifactId>validation-api</artifactId>
				<version>${validation-api.version}</version>
			</dependency>

			<!-- https://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-databind -->
			<dependency>
				<groupId>com.fasterxml.jackson.core</groupId>
				<artifactId>jackson-core</artifactId>
				<version>${fasterxml.jackson.core.version}</version>
			</dependency>
			<dependency>
				<groupId>com.fasterxml.jackson.core</groupId>
				<artifactId>jackson-databind</artifactId>
				<version>${fasterxml.jackson.core.version}</version>
			</dependency>

			<!-- ********* -->
			<!-- APPENGINE -->
			<!-- ********* -->
			<!-- Compile/runtime dependencies -->
			<dependency>
				<groupId>com.google.appengine</groupId>
				<artifactId>appengine-api-1.0-sdk</artifactId>
				<version>${appengine.version}</version>
			</dependency>
			<!-- Servlet -->
			<dependency>
				<groupId>javax.servlet</groupId>
				<artifactId>servlet-api</artifactId>
				<version>${servlet.version}</version>
				<scope>provided</scope>
			</dependency>

			<!-- ********* -->
			<!-- OBJECTIFY -->
			<!-- ********* -->
			<dependency>
				<groupId>com.googlecode.objectify</groupId>
				<artifactId>objectify</artifactId>
				<version>${objectify.version}</version>
			</dependency>
			<dependency>
				<groupId>com.googlecode.objectify</groupId>
				<artifactId>objectify-gwt</artifactId>
				<version>${objectify-gwt.version}</version>
			</dependency>

			<!-- ***** -->
			<!-- UTILS -->
			<!-- ***** -->
			<dependency>
				<groupId>org.apache.commons</groupId>
				<artifactId>commons-collections4</artifactId>
				<version>${commons-collections4.version}</version>
			</dependency>
			<!-- ******* -->
			<!-- TESTING -->
			<!-- ******* -->
			<!-- Test Dependencies -->
			<dependency>
				<groupId>junit</groupId>
				<artifactId>junit</artifactId>
				<version>${junit.test.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>com.google.appengine</groupId>
				<artifactId>appengine-testing</artifactId>
				<version>${appengine.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>com.google.appengine</groupId>
				<artifactId>appengine-api-stubs</artifactId>
				<version>${appengine.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>com.google.appengine</groupId>
				<artifactId>appengine-api-labs</artifactId>
				<version>${appengine.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>com.google.appengine</groupId>
				<artifactId>appengine-tools-sdk</artifactId>
				<version>${appengine.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-test</artifactId>
				<version>${spring.framework.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.mockito</groupId>
				<!-- <artifactId>mockito-all</artifactId> -->
				<artifactId>mockito-core</artifactId>
				<version>${mockito.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.seleniumhq.selenium</groupId>
				<artifactId>selenium-java</artifactId>
				<version>${selenium.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.seleniumhq.selenium</groupId>
				<artifactId>selenium-server</artifactId>
				<version>${selenium.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.seleniumhq.selenium</groupId>
				<artifactId>selenium-firefox-driver</artifactId>
				<version>${selenium.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.seleniumhq.selenium</groupId>
				<artifactId>htmlunit-driver</artifactId>
				<version>${selenium.htmlunit.version}</version>
				<scope>test</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<build>
		<pluginManagement>
			<plugins>
				<!-- ********************* -->
				<!-- maven-compiler-plugin -->
				<!-- ********************* -->
				<plugin>
					<artifactId>maven-compiler-plugin</artifactId>
					<!-- Do not upgrade past 3.1 to avoid triggering https://issues.apache.org/jira/browse/MSOURCES-95 -->
					<version>3.1</version>
					<configuration>
						<source>1.8</source>
						<target>1.8</target>
					</configuration>
				</plugin>

				<!-- ******************* -->
				<!-- maven-source-plugin -->
				<!-- ******************* -->
				<plugin>
					<artifactId>maven-source-plugin</artifactId>
					<version>3.0.1</version>
					<executions>
						<execution>
							<id>attach-sources</id>
							<phase>package</phase>
							<goals>
								<goal>jar-no-fork</goal>
							</goals>
						</execution>
					</executions>
				</plugin>

				<!-- **************** -->
				<!-- gwt-maven-plugin -->
				<!-- **************** -->
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>gwt-maven-plugin</artifactId>
					<version>${gwt-maven-plugin.version}</version>

					<configuration>
						<!-- ************ -->
						<!-- COMPILE GOAL -->
						<!-- ************ -->

						<!-- EXPERIMENTAL: Gather compiler metrics. Can be set from the command 
							line using '-Dgwt.compiler.compilerMetrics=true'. Default value is: false. -->
						<compilerMetrics>true</compilerMetrics>

						<!-- Compile a report that tells the "Story of Your Compile". Can be 
							set from command line using '-Dgwt.compiler.compileReport=true'. Default 
							value is: false. -->
						<compileReport>true</compileReport>

						<!-- Extra JVM arguments that are passed to the GWT-Maven generated 
							scripts (for compiler, shell, etc - typically use -Xmx512m here, or -XstartOnFirstThread, 
							etc). Can be set from command line using '-Dgwt.extraJvmArgs=...', defaults 
							to setting max Heap size to be large enough for most GWT use cases. -->
						<extraJvmArgs>-Xmx1g</extraJvmArgs>

						<!-- Fail compilation if any input file contains an error. Can be set 
							from command line using '-Dgwt.compiler.strict=true'. Default value is: false. -->
						<failOnError>true</failOnError>

						<!-- GWT logging level (-logLevel ERROR, WARN, INFO, TRACE, DEBUG, 
							SPAM, or ALL). Can be set from command line using '-Dgwt.logLevel=...' Default 
							value is: INFO. -->
						<logLevel>INFO</logLevel>

						<!-- Specifies Java source level. Default value is: auto. -->
						<sourceLevel>${java.version}</sourceLevel>

						<!-- GWT JavaScript compiler output style (-style OBF[USCATED], PRETTY, 
							or DETAILED). Can be set from command line using '-Dgwt.style=...' -->
						<style>${gwt.style}</style>

						<!-- Location of the web application static resources (same as maven-war-plugin 
							parameter). Default value is: ${basedir}/src/main/webapp. -->
						<warSourceDirectory>${server-directory}/src/main/webapp</warSourceDirectory>

						<!-- Location on filesystem where GWT will write output files (-out 
							option to GWTCompiler). Default value is: ${project.build.directory}/${project.build.finalName}. -->
						<webappDirectory>${server-directory}/target/${server-artifactId}-${project.version}</webappDirectory>


						<!-- ******************* -->
						<!-- RUN-CODESERVER GOAL -->
						<!-- ******************* -->

						<codeServerWorkDir>${project.build.directory}/${project.build.finalName}/codeserverTemp</codeServerWorkDir>
						<!-- Set SuperDevMode's bindAddress. Can be set from command line using 
							'-Dgwt.bindAddress=...' -->
						<!-- <bindAddress>0.0.0.0</bindAddress> -->

						<!-- An output directory where files for launching Super Dev Mode will 
							be written. (Optional.) mvn gwt:run-codeserver - won't have to use the bookmarklet. 
							FONTOS: A codeserver ide menti a frissen fordított javascript kódot. -->
						<launcherDir>${server-directory}/target/${server-artifactId}-${project.version}</launcherDir>


						<!-- ******** -->
						<!-- RUN GOAL -->
						<!-- ******** -->

						<!-- Copies the contents of warSourceDirectory to hostedWebapp. Can 
							be set from command line using '-Dgwt.copyWebapp=...' -->
						<copyWebapp>true</copyWebapp>

						<!-- Location of the hosted-mode web application structure. Default: 
							${project.build.directory}/${project.build.finalName}. -->
						<hostedWebapp>${server-directory}/target/${server-artifactId}-${project.version}</hostedWebapp>

						<!-- Prevents the embedded GWT Tomcat server from running (even if 
							a port is specified). Can be set from command line using '-Dgwt.noserver=...' -->
						<noServer>true</noServer>

						<!-- Runs the embedded GWT server on the specified port. Default value 
							is: 8888. -->
						<port>8080</port>

						<!-- URL that should be automatically opened in the GWT shell. For 
							example com.myapp.gwt.Module/Module.html. When the host page is outside the 
							module "public" folder (for example, at webapp root), the module MUST be 
							specified (using a single <module> in configuration or by setting -Dgwt.module=..) 
							and the runTarget parameter can only contain the host page URI. When the 
							GWT module host page is part of the module "public" folder, the runTarget 
							MAY define the full GWT module path (com.myapp.gwt.Module/Module.html) that 
							will be automatically converted according to the rename-to directive into 
							renamed/Module.html. -->
						<runTarget>${server-directory}/target/${server-artifactId}-${project.version}/index.html</runTarget>


						<!-- ********* -->
						<!-- TEST GOAL -->
						<!-- ********* -->

						<!-- Configure test mode. Can be set to "manual", "htmlunit" or "selenium". 
							If set to any other value, that value will be passed as the -runStyle argument, 
							allowing you to use an arbitrary RunStyle when running tests. -->
						<mode>htmlunit</mode>

						<!-- Time out (in seconds) for test execution in dedicated JVM -->
						<testTimeOut>180</testTimeOut>

						<!-- Switch to a suite to run tests faster -->
						<!-- <includes>**/*GwtTestSuite.java</includes> -->
						<!-- <excludes>**/*GwtTest.java</excludes> -->
						<includes>**/*GwtTest.java</includes>

						<gen>${project.build.directory}/gwt-gen</gen>
					</configuration>

					<executions>
						<execution>
							<goals>
								<goal>compile</goal>
							</goals>
						</execution>
					</executions>
				</plugin>

				<!-- ****************** -->
				<!-- gwt-maven-plugin 2 -->
				<!-- ****************** -->
				<plugin>
					<groupId>net.ltgt.gwt.maven</groupId>
					<artifactId>gwt-maven-plugin</artifactId>
					<version>${ltgt-gwt-maven-plugin.version}</version>
					<extensions>true</extensions>
					<executions>
						<execution>
							<goals>
								<goal>compile</goal>
								<goal>test</goal>
							</goals>
						</execution>
					</executions>
					<configuration>
						<skipModule>true</skipModule>
						<failOnError>true</failOnError>
						<sourceLevel>1.8</sourceLevel>
						<compilerArgs>
							<arg>-compileReport</arg>
							<arg>-XcompilerMetrics</arg>
						</compilerArgs>
						<classpathScope>compile+runtime</classpathScope>
						<launcherDir>${server-directory}/target/${server-artifactId}-${project.version}</launcherDir>
						<warDir>${server-directory}/target/${server-artifactId}-${project.version}</warDir>
						<webappDirectory>${server-directory}/target/${server-artifactId}-${project.version}</webappDirectory>
						<classpathScope>compile+runtime</classpathScope>
					</configuration>
				</plugin>


				<!-- ************************ -->
				<!-- Service worker generator -->
				<!-- ************************ -->
				<plugin>
					<groupId>com.github.eirslett</groupId>
					<artifactId>frontend-maven-plugin</artifactId>
					<version>${frontend-maven-plugin.version}</version>
					<executions>
						<execution>
							<id>install node and npm</id>
							<goals>
								<goal>install-node-and-npm</goal>
							</goals>
							<phase>generate-resources</phase>
							<configuration>
								<nodeVersion>v9.0.0</nodeVersion>
							</configuration>
						</execution>
						<execution>
							<id>npm install</id>
							<goals>
								<goal>npm</goal>
							</goals>
							<phase>generate-resources</phase>
							<configuration>
								<arguments>install</arguments>
							</configuration>
						</execution>
						<execution>
							<id>npm generate</id>
							<goals>
								<goal>npm</goal>
							</goals>
							<phase>prepare-package</phase>
							<configuration>
								<arguments>run-script generate
									${server-directory}/target/${server-artifactId}-${project.version}</arguments>
							</configuration>
						</execution>
					</executions>
				</plugin>

				<!-- ********************** -->
				<!-- appengine-maven-plugin -->
				<!-- ********************** -->
				<plugin>
					<groupId>com.google.appengine</groupId>
					<artifactId>appengine-maven-plugin</artifactId>
					<version>${appengine.version}</version>
					<configuration>
						<version>${appengine.app.version}</version>
						<enableJarClasses>false</enableJarClasses>
						<!-- <enableJarSplitting>true</enableJarSplitting> -->
						<!-- Jar the WEB-INF/classes content. Applies to the App Engine standard 
							environment only. <enableJarClasses>false</enableJarClasses> -->

						<!-- Comment in the below snippet to bind to all IPs instead of just 
							localhost -->
						<!-- <address>0.0.0.0</address> -->
						<port>8080</port>

						<!-- Comment in the below snippet to enable local debugging with a 
							remove debugger like those included with Eclipse or IntelliJ -->
						<!-- jvmFlags> <jvmFlag>-agentlib:jdwp=transport=dt_socket,address=8000,server=y,suspend=n</jvmFlag> 
							</jvmFlags -->
						<!-- <appId>crm4it</appId> <version>1</version> -->
						<jvmFlags>
							<!-- see also: http://blog.cwill-dev.com/2011/11/22/grails-java-lang-outofmemoryerror-permgen-space/ -->
							<jvmFlag>-Xms512m</jvmFlag>
							<jvmFlag>-Xmx1024m</jvmFlag>
							<jvmFlag>-XX:PermSize=256m</jvmFlag>
							<jvmFlag>-XX:MaxPermSize=512m</jvmFlag>
							<!-- <jvmFlag>-XX:+UseParNewGC</jvmFlag> <jvmFlag>-XX:MaxNewSize=256m</jvmFlag> 
								<jvmFlag>-XX:NewSize=256m</jvmFlag> <jvmFlag>-XX:SurvivorRatio=128</jvmFlag> 
								<jvmFlag>-XX:+UseTLAB</jvmFlag> <jvmFlag>-XX:+UseConcMarkSweepGC</jvmFlag> 
								<jvmFlag>-XX:+CMSClassUnloadingEnabled</jvmFlag> <jvmFlag>-XX:+CMSPermGenSweepingEnabled</jvmFlag> -->
						</jvmFlags>
						<!-- <appDir>${project.build.directory}/gwt/launcherDir</appDir> -->
					</configuration>
					<executions>
						<execution>
							<id>start-gae</id>
							<phase>pre-integration-test</phase>
							<goals>
								<goal>devserver_start</goal>
							</goals>
						</execution>
						<execution>
							<id>stop-gae</id>
							<phase>post-integration-test</phase>
							<goals>
								<goal>devserver_stop</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.codehaus.mojo</groupId>
										<artifactId>gwt-maven-plugin</artifactId>
										<versionRange>[1.0,)</versionRange>
										<goals>
											<goal>resources</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<execute />
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>

				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-war-plugin</artifactId>
					<version>${maven-war-plugin.version}</version>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>

	<modules>
		<module>hw-gae-shared</module>
		<module>hw-gae-client_core</module>
		<module>hw-gae-client_fro</module>
		<module>hw-gae-client_inf</module>
		<module>hw-gae-client_kip</module>
		<module>hw-gae-server</module>
	</modules>
</project>